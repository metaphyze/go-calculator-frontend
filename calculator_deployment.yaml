apiVersion: apps/v1
kind: Deployment
metadata:
  name: calculator-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calculator-frontend
  template:
    metadata:
      labels:
        app: calculator-frontend
    spec:
      containers:
      - name: calculator-frontend
        image: metaphyze/calculator-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: PORT
          value: "5000"
        - name: CALCULATION_URL
          value: "http://calculation-service:9999"
        - name: USER_DB_HOST_AND_PORT
          value: "user-db-service:27017"
        - name: LOG_DB_HOST_AND_PORT
          value: "log-db-service:27017"
        - name: RABBITMQ_HOST
          value: "rabbitmq-service"
        - name: RABBITMQ_USER
          value: "bugs"
        - name: RABBITMQ_PASSWORD
          value: "bunny"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-to-mongodb-logger
  labels:
    app: rabbitmq-to-mongodb-logger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-to-mongodb-logger
  template:
    metadata:
      labels:
        app: rabbitmq-to-mongodb-logger
    spec:
      containers:
        - name: rabbitmq-to-mongodb-logger
          image: metaphyze/rabbit-mq-to-mongodb-logger:latest
          imagePullPolicy: Always
          env:
            - name: RABBITMQ_HOST
              value: "rabbitmq-service"
            - name: MONGODB_HOST
              value: "log-db-service"
---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: mongo-pv
#spec:
#  capacity:
#    storage: 100Mi
#  accessModes:
#    - ReadWriteOnce
#  hostPath:
#    path: "/mongodbdata"
#    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# New PersistentVolumeClaim for logging database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: log-mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calculation-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calculation-server
  template:
    metadata:
      labels:
        app: calculation-server
    spec:
      containers:
      - name: calculation-server
        image: metaphyze/go-calculator:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: RABBITMQ_HOST
          value: "rabbitmq-service"
        - name: RABBITMQ_USERNAME
          value: "bugs"
        - name: RABBITMQ_PASSWORD
          value: "bunny"
        - name: RABBITMQ_QUEUE
          value: "calculation_events"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-db-server
  template:
    metadata:
      labels:
        app: user-db-server
    spec:
      containers:
      - name: user-db-server
        image: mongo:8.0.1
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: mongo-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-db-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-db-server
  template:
    metadata:
      labels:
        app: log-db-server
    spec:
      containers:
      - name: log-db-server
        image: mongo:8.0.1
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: log-mongo-storage
          mountPath: /data/db
      volumes:
      - name: log-mongo-storage
        persistentVolumeClaim:
          claimName: log-mongo-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management  # This image includes the management UI
        ports:
        - containerPort: 5672  # RabbitMQ default port
        - containerPort: 15672  # RabbitMQ management UI port
        env:
        # This will only be available within the cluster
        - name: RABBITMQ_DEFAULT_USER
          value: "bugs"
        - name: RABBITMQ_DEFAULT_PASS
          value: "bunny"
---
apiVersion: v1
kind: Service
metadata:
  name: calculator-frontend-service
spec:
  selector:
    app: calculator-frontend
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 5000
      nodePort: 30001
  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: calculation-service
spec:
  selector:
    app: calculation-server
  ports:
    - protocol: TCP
      port: 9999
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: user-db-service
spec:
  selector:
    app: user-db-server
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: log-db-service
spec:
  selector:
    app: log-db-server
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  type: ClusterIP
  ports:
  - name: rabbitmq-port
    port: 5672
    targetPort: 5672
  - name: rabbitmq-management-port
    port: 15672
    targetPort: 15672
  selector:
    app: rabbitmq
